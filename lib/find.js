// Generated by CoffeeScript 1.6.3
var delay, fuzzy, goto, gotoTab, initialTab, input, isKeyword, menu, next_action, q, render, suggest, wait_to_do,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

isKeyword = function(char) {
  return char.match(/[\w\d\s\u4E00-\u9FA5]/) != null;
};

fuzzy = function(text) {
  var query;
  query = text.split('').filter(isKeyword).join('.*');
  return new RegExp(query, 'i');
};

q = function(query) {
  return document.querySelector(query);
};

initialTab = void 0;

window.onbeforeunload = function() {
  return chrome.extension.sendMessage({
    word: 'close'
  }, function(res) {
    return console.log('after close', res);
  });
};

input = q('#key');

menu = q('#menu');

suggest = function(text) {
  var addOne, list, show_list;
  list = [];
  show_list = function() {
    var choice, first;
    choice = [];
    list.map(function(tab) {
      if (tab.title === 'Search Tabs') {
        return console.log('hide', tab);
      } else if (tab.active) {
        if (initialTab == null) {
          initialTab = tab;
        }
        choice.unshift(tab);
        return chrome.extension.sendMessage({
          word: 'log',
          data: tab
        });
      } else {
        return choice.push(tab);
      }
    });
    if (choice[0] != null) {
      menu.innerHTML = choice.map(function(data) {
        return render(data);
      }).join('');
      first = menu.children[0];
      if (first != null) {
        first.id = 'choose';
        return goto(first);
      }
    } else {
      return menu.innerHTML = '<div id="empty">:( no tab..</div>';
    }
  };
  addOne = function(tab) {
    var urlList, _ref;
    if (tab.url.match(/^http/) != null) {
      urlList = list.map(function(tab) {
        return tab.url;
      });
      if (_ref = tab.url, __indexOf.call(urlList, _ref) < 0) {
        return list.push(tab);
      }
    }
  };
  return chrome.tabs.query({}, function(tabs) {
    tabs.filter(function(tab) {
      return tab.title.indexOf(text) >= 0;
    }).map(addOne);
    tabs.filter(function(tab) {
      return tab.url.indexOf(text) >= 0;
    }).map(addOne);
    tabs.filter(function(tab) {
      return tab.title.match(fuzzy(text)) != null;
    }).map(addOne);
    return show_list();
  });
};

next_action = null;

delay = function(t, f) {
  return setTimeout(f, t);
};

wait_to_do = function(action) {
  if (next_action != null) {
    clearTimeout(next_action);
  }
  return next_action = delay(200, action);
};

input.addEventListener('input', function() {
  return wait_to_do(function() {
    return suggest(input.value);
  });
});

input.onkeydown = function(event) {
  var lastTab, nextTab, selected;
  if (event.keyCode === 13) {
    selected = q('#choose');
    return window.close();
  } else if (event.keyCode === 40) {
    nextTab = q('#choose').nextElementSibling;
    if (nextTab != null) {
      q('#choose').id = '';
      nextTab.id = 'choose';
      nextTab.scrollIntoViewIfNeeded();
      return goto(nextTab);
    }
  } else if (event.keyCode === 38) {
    lastTab = q('#choose').previousElementSibling;
    if (lastTab != null) {
      q('#choose').id = '';
      lastTab.id = 'choose';
      lastTab.scrollIntoViewIfNeeded();
      return goto(lastTab);
    }
  } else if (event.keyCode === 27) {
    chrome.extension.sendMessage({
      word: 'log',
      data: initialTab
    });
    if (initialTab != null) {
      gotoTab(initialTab.id);
      debugger;
      return window.close();
    }
  }
};

render = function(data) {
  var img;
  img = function(link) {
    return "<img src='" + link + "' class='icon'>";
  };
  return "<div class='tab' " + (data.id != null ? "data-tabid='" + data.id + "'" : '') + ">\n  <div class='content'>\n    <div class='title'>" + data.title + "</div>\n    <div class='url'>" + data.url + "</div>\n  </div>\n  " + (data.favIconUrl != null ? img(data.favIconUrl) : '') + "\n</div>";
};

gotoTab = function(tabid) {
  return chrome.tabs.update(tabid, {
    selected: true
  });
};

goto = function(elem) {
  return gotoTab(parseInt(elem.getAttribute('data-tabid')));
};

input.focus();

suggest('');

/*
//@ sourceMappingURL=find.map
*/
